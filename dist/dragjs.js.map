{"version":3,"sources":["webpack://DragJs/webpack/universalModuleDefinition","webpack://DragJs/webpack/bootstrap","webpack://DragJs/./index.js","webpack://DragJs/./lib/entry_traveler.js","webpack://DragJs/./lib/dragjs_datatransfer.js","webpack://DragJs/./lib/event.js","webpack://DragJs/./lib/dom.js","webpack://DragJs/./lib/style.js","webpack://DragJs/./lib/dropzone.js","webpack://DragJs/./lib/utils.js","webpack://DragJs/./lib/dragjs.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","EntryTraveler","itemList","travel","entries","length","entry","webkitGetAsEntry","push","path","Promise","all","map","isFile","fileEntry","dirEntry","then","array","Array","concat","apply","_file","file","resolve","reject","_read","createReader","reader","readEntries","sub","DragJsDataTransfer","originalDataTransfer","_classCallCheck","this","event","DragEvent","dataTransfer","dataTransferTypes","types","DOMStringList","contains","indexOf","items","files","DropZoneEvent","elem","listenDrop","arguments","undefined","event_classCallCheck","element","dragEnterCounter","addEventListener","_dragOver","_dragEnter","_dragLeave","_drop","e","_toFileDataTransfer","dropEffect","dispatchEvent","CustomEvent","EVENT_DRAGENTER","_raiseEventDragLeave","EVENT_DRAGLEAVE","_this","getFiles","EVENT_DROP","detail","reason","EVENT_ERR","cancelable","console","error","event2NativeDataTransfer","getContainFiles","preventDefault","listen","getClassNames","className","split","setClassNames","classNames","join","cssDragOver","addClassName","index","splice","removeClassName","DropZone","options","dropzone_classCallCheck","isSupported","getDragOverClass","callback","fallback","cssClass","dragover","relativePath","xRelativePath","webkitRelativePath","FileList","__webpack_exports__","utils","dragjs_event","style","dropzone","toFormData","fieldName","formData","FormData","File","append"],"mappings":"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","file":"dragjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DragJs\"] = factory();\n\telse\n\t\troot[\"DragJs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require(\"./lib/dragjs\");\n","import { Entry, FileEntry, DirectoryEntry, DirectoryReader } from '..'\n\nconst EntryTraveler = {\n    itemList : {\n        /**\n         * @param  {DataTransferItemList}  itemList\n         * @return {Promise<File[]>}\n         */\n        travel(itemList)\n        {\n            /**\n             * @type {Entry[]}\n             */\n            let entries = [];\n            for (let i = 0; i < itemList.length; i++) {\n                let item = itemList[i];\n                /** @type {Entry|null} */\n                let entry = item.webkitGetAsEntry();\n\n                if (entry) {\n                    entries.push(entry);\n                }\n            }\n\n            return EntryTraveler.entry.travel(entries, \"\");\n        }\n    },\n\n    entry : {\n        /**\n         * @param  {Entry[]}  entries\n         * @param  {string}  path\n         * @return {Promise<File[]>}\n         */\n        travel(entries, path)\n        {\n            return Promise.all(entries.map(function (entry) {\n                if (entry.isFile) {\n                    /** @type {FileEntry} */\n                    let fileEntry = entry;\n                    return EntryTraveler.fileEntry.get(fileEntry, path);\n                } else {\n                    /** @type {DirectoryEntry} */\n                    let dirEntry = entry;\n                    return EntryTraveler.dirEntry.travel(dirEntry, path);\n                }\n            })).then((array) => {\n                return Array.prototype.concat.apply([], array);\n            });\n        }\n    },\n\n    fileEntry : {\n        /**\n         * @param  {FileEntry}   entry\n         * @param  {string}  path\n         * @return {Promise<File[]>}\n         */\n        get(entry, path)\n        {\n            return EntryTraveler.fileEntry._file(entry).then((file) => {\n                file['xRelativePath'] = path + file.name;\n                return [file];\n            });\n        },\n\n        /**\n         * @param  {FileEntry}  entry\n         * @return {Promise<File>}\n         * @private\n         */\n        _file(entry)\n        {\n            return new Promise((resolve, reject) => entry.file(resolve, reject));\n        }\n    },\n\n    dirEntry : {\n        /**\n         * @param  {DirectoryEntry}  entry\n         * @param  {string}  path\n         * @return {Promise<File[]>}\n         */\n        travel(entry, path)\n        {\n            return EntryTraveler.dirEntry._read(entry.createReader()).then((entries) => {\n                return EntryTraveler.entry.travel(entries, path + entry.name + \"/\");\n            });\n        },\n\n        /**\n         * @param  {DirectoryReader}  reader\n         * @return {Promise<Entry[]>}\n         * @private\n         */\n        _read(reader)\n        {\n            return new Promise((resolve, reject) => {\n                reader.readEntries((entries) => {\n                    if (entries.length) {\n                        EntryTraveler.dirEntry._read(reader).then((sub) => {\n                            resolve(entries.concat(sub));\n                        }, reject);\n                    } else {\n                        resolve([]);\n                    }\n                }, reject);\n            });\n        }\n    }\n};\n\nexport default EntryTraveler;","import EntryTraveler from \"./entry_traveler\";\n\nclass DragJsDataTransfer\n{\n    /**\n     * @param {DataTransfer | null} originalDataTransfer\n     */\n    constructor(originalDataTransfer)\n    {\n        this.originalDataTransfer = originalDataTransfer;\n    }\n\n    /**\n     * @return {Promise<File[] | FileList>}\n     */\n    getFiles()\n    {\n        if (! this.originalDataTransfer) {\n            return Promise.resolve([]);\n        }\n\n        let dataTransfer = this.originalDataTransfer;\n\n        if (dataTransfer.items) {\n            let items = dataTransfer.items;\n\n            return EntryTraveler.itemList.travel(items);\n        } else {\n            return Promise.resolve(dataTransfer.files);\n        }\n    }\n\n    /**\n     * @param  {Event}  event\n     * @return {DataTransfer|null}\n     */\n    static event2NativeDataTransfer(event)\n    {\n        if (! (event instanceof DragEvent)) {\n            return null;\n        }\n\n        return event.dataTransfer || null;\n    }\n\n    /**\n     * @param  {DataTransfer}  dataTransfer\n     * @return {boolean}\n     */\n    static getContainFiles(dataTransfer)\n    {\n        let dataTransferTypes = dataTransfer.types;\n\n        if (! dataTransferTypes) {\n            // Unsupported Browser, we presume it was a file.\n            return true;\n        }\n\n        if (dataTransferTypes instanceof DOMStringList) {\n            return dataTransferTypes.contains('Files');\n        } else {\n            return dataTransferTypes.indexOf('Files') > -1;\n        }\n    }\n}\n\nexport default DragJsDataTransfer;","import DragJsDataTransfer from \"./dragjs_datatransfer\";\n\nclass DropZoneEvent\n{\n    /**\n     * @param {HTMLElement} elem\n     * @param {boolean} listenDrop\n     */\n    constructor(elem, listenDrop = false)\n    {\n        this.element = elem;\n        this.dragEnterCounter = 0;\n        this.listenDrop = listenDrop;\n\n        elem['dragJsEventHandler'] = this\n\n        this.element.addEventListener('dragover', this._dragOver.bind(this), false);\n        this.element.addEventListener('dragenter', this._dragEnter.bind(this), false);\n        this.element.addEventListener('dragleave', this._dragLeave.bind(this), false);\n        this.element.addEventListener('drop', this._drop.bind(this), false);\n    }\n\n    /**\n     * @private\n     *\n     * @param {Event} e\n     */\n    _dragOver(e)\n    {\n        if (this.listenDrop) {\n            let dataTransfer = this._toFileDataTransfer(e)\n            if (dataTransfer) {\n                dataTransfer.dropEffect = \"copy\"\n            }\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {Event} e\n     */\n    _dragEnter(e)\n    {\n        let dataTransfer = this._toFileDataTransfer(e)\n\n        if (dataTransfer && this.dragEnterCounter++ == 0) {\n            this.element.dispatchEvent(new CustomEvent(EVENT_DRAGENTER));\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {Event} e\n     */\n    _dragLeave(e)\n    {\n        let dataTransfer = this._toFileDataTransfer(e)\n\n        if (dataTransfer && --this.dragEnterCounter == 0) {\n            this._raiseEventDragLeave()\n        }\n    }\n\n    /**\n     * @private\n     */\n    _raiseEventDragLeave()\n    {\n        this.element.dispatchEvent(new CustomEvent(EVENT_DRAGLEAVE));\n    }\n\n    /**\n     * @private\n     * \n     * @param {Event} e\n     */\n    _drop(e)\n    {\n        this.dragEnterCounter = 0;\n        this._raiseEventDragLeave();\n\n        if (this.listenDrop) {\n            let originalDataTransfer = this._toFileDataTransfer(e)\n\n            if (originalDataTransfer) {\n                let dataTransfer = new DragJsDataTransfer(originalDataTransfer)\n\n                dataTransfer.getFiles().then((files) => {\n                    if (files.length) {\n                        this.element.dispatchEvent(new CustomEvent(EVENT_DROP, {\n                            detail: {files}\n                        }))\n                    }\n                }, (reason) => {\n                    var notPrevented = this.element.dispatchEvent(new CustomEvent(EVENT_ERR, {\n                        cancelable: true, \n                        detail: {reason}\n                    }));\n                    if (notPrevented) {\n                        console.error(reason);\n                    }\n                })\n            }\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param  {Event}  e\n     * @return {DataTransfer | null}\n     */\n    _toFileDataTransfer(e)\n    {\n        let dataTransfer = DragJsDataTransfer.event2NativeDataTransfer(e);\n\n        let containFiles = dataTransfer ? DragJsDataTransfer.getContainFiles(dataTransfer) : false;\n\n        if (containFiles) {\n            e.preventDefault();\n\n            return dataTransfer;\n        }\n    }\n}\n\n/**\n * @param {HTMLElement} element\n * @param {boolean} listenDrop\n */\nfunction listen(element, listenDrop = false) {\n    if (! element['dragJsEventHandler']) {\n        new DropZoneEvent(element, listenDrop);\n    } else if (listenDrop) {\n        /**\n         * @type {DropZoneEvent}\n         */\n        let handler = element['dragJsEventHandler'];\n        handler.listenDrop = listenDrop;\n    }\n}\n\nexport { DropZoneEvent, listen };\nexport const EVENT_DRAGENTER = 'dropzone-dragenter';\nexport const EVENT_DRAGLEAVE = 'dropzone-dragleave';\nexport const EVENT_DROP = 'dropzone-drop';\nexport const EVENT_ERR = 'dropzone-error';\n","/**\n * @param  {HTMLElement}  element\n * @param  {string}  className\n */\nfunction addClassName(element, className)\n{\n    var classNames = getClassNames(element);\n    if (classNames.indexOf(className) == -1) {\n        classNames.push(className);\n        setClassNames(element, classNames);\n    }\n}\n\n/**\n * @param  {HTMLElement}  element\n * @param  {string}  className\n */\nfunction removeClassName(element, className)\n{\n    var classNames = getClassNames(element);\n    /**\n     * @type {number}\n     */\n    var index;\n    if ((index = classNames.indexOf(className)) > -1) {\n        classNames.splice(index, 1);\n        setClassNames(element, classNames);\n    }\n}\n\n/**\n * @param  {HTMLElement}  element\n * @return {string[]}\n */\nfunction getClassNames(element)\n{\n    return element.className && element.className.split(' ') || [];\n}\n\n/**\n * @param  {HTMLElement}  element\n * @param  {string[]}  classNames\n */\nfunction setClassNames(element, classNames)\n{\n    element.className = classNames.join(' ');\n}\n\nexport { addClassName, removeClassName, getClassNames, setClassNames }\n","import { listen, EVENT_DRAGENTER, EVENT_DRAGLEAVE } from './event';\r\nimport { addClassName, removeClassName } from './dom';\r\n\r\n/**\r\n * \r\n * @param {HTMLElement} element \r\n * @param {string} className \r\n */\r\nfunction cssDragOver(element, className) {\r\n    listen(element);\r\n\r\n    element.addEventListener(EVENT_DRAGENTER, () => {\r\n        addClassName(element, className);\r\n    }, false);\r\n\r\n    element.addEventListener(EVENT_DRAGLEAVE, () => {\r\n        removeClassName(element, className);\r\n    }, false);\r\n};\r\n\r\nexport { cssDragOver }\r\n","import { DropZoneOptions, DropZoneDropCallback, DropZoneFallback } from \"..\";\nimport { listen, EVENT_DROP, EVENT_ERR } from \"./event\";\nimport { cssDragOver } from \"./style\";\nimport { isSupported } from \"./dragjs\";\n\nclass DropZone\n{\n    /**\n     * @param {HTMLElement} element\n     * @param {DropZoneOptions} options\n     */\n    constructor(element, options = {})\n    {\n        this.element = element;\n        this.options = options;\n\n        if (isSupported()) {\n            listen(element, true);\n            cssDragOver(element, this.getDragOverClass());\n        }\n    }\n\n    /**\n     * \n     * @param  {DropZoneDropCallback}  callback\n     * @param  {DropZoneFallback=}  fallback\n     * @return {this}\n     */\n    listenOnDrop(callback, fallback)\n    {\n        this.element.addEventListener(EVENT_DROP, function (e) {\n            callback(e.detail.files);\n        }, false);\n\n        if (fallback) {\n            this.element.addEventListener(EVENT_ERR, function (e) {\n                e.preventDefault();\n                fallback(e.detail.reason);\n            })\n        }\n\n        return this\n    }\n\n    /**\n     * @return {Promise<File[] | FileList>}\n     */\n    getDropFiles()\n    {\n        return new Promise((resolve, reject) => {\n            this.element.addEventListener(EVENT_DROP, function (e) {\n                resolve(e.detail.files);\n            }, false);\n        })\n    }\n\n    /**\n     * @returns {string}\n     */\n    getDragOverClass()\n    {\n        return this.options.cssClass && this.options.cssClass.dragover || 'is-dragover';\n    }\n}\n\nexport default DropZone\n","/**\n * @param  {File | File[] | FileList}  files \n * @param  {string}  fieldName \n * @return {FormData}\n */\nexport function toFormData(files, fieldName = \"files[]\") {\n    var formData = new FormData();\n\n    if (files instanceof File) {\n        formData.append(fieldName, files, relativePath(files));\n    } else {\n        for (var i = 0; i < files.length; i++) {\n            var file = files[i];\n            formData.append(fieldName, file, relativePath(file));\n        }\n    }\n\n    return formData;\n}\n\n/**\n * @param  {any}  file\n * @return {string} \n */\nexport function relativePath(file) {\n    return file.xRelativePath || file.webkitRelativePath || file.name;\n}","import DropZone from \"./dropzone\";\nimport { toFormData, relativePath } from \"./utils\";\nimport { listen } from './event';\nimport { cssDragOver } from './style';\n\n/**\n * @return {boolean}\n */\nexport function isSupported() {\n    return typeof FileList !== 'undefined'\n}\nexport { DropZone }\nexport const utils = { toFormData, relativePath }\nexport const event = { listen }\nexport const style = { cssDragOver }\n"],"sourceRoot":""}