{"version":3,"sources":["webpack://DragJs/webpack/universalModuleDefinition","webpack://DragJs/webpack/bootstrap","webpack://DragJs/./index.js","webpack://DragJs/./src/entry_traveler.js","webpack://DragJs/./src/dragjs_datatransfer.js","webpack://DragJs/./src/dropzone_event.js","webpack://DragJs/./src/dropzone_dom.js","webpack://DragJs/./src/dropzone.js","webpack://DragJs/./src/utils.js","webpack://DragJs/./src/dragjs.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","fileEntry","path","Promise","resolve","reject","file","readFileEntry","then","xRelativePath","dirEntry","travelDirEntry","reader","readEntries","entries","length","sub","concat","createReader","readDirEntry","travelEntries","arguments","undefined","all","map","entry","isFile","array","Array","apply","DragJsDataTransfer","originalDataTransfer","_classCallCheck","this","event","DragEvent","dataTransfer","dataTransferTypes","types","DOMStringList","contains","indexOf","items","webkitGetAsEntry","push","getAsEntry","travelTransferItemList","files","DropZoneEvent","args","dropzone_event_classCallCheck","dragEnterCounter","isSupported","element","addEventListener","_dragOver","_dragEnter","_dragLeave","_drop","e","_toFileDataTransfer","dropEffect","dispatchEvent","CustomEvent","EVENT_DRAGENTER","_raiseEventDragLeave","EVENT_DRAGLEAVE","_this","getFiles","EVENT_DROP","detail","reason","EVENT_ERR","cancelable","console","error","event2NativeDataTransfer","getContainFiles","preventDefault","DropZoneDom","dropzone_dom_classCallCheck","addClassName","getDragOverClass","removeClassName","options","cssClass","dragover","className","classNames","getClassNames","setClassNames","index","splice","split","join","DropZone","dropzone_classCallCheck","events","dom","_init","registerEventListeners","callback","fallback","relativePath","webkitRelativePath","FileList","__webpack_exports__","utils","dropzone","toFormData","fieldName","formData","FormData","File","append"],"mappings":"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","file":"dragjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DragJs\"] = factory();\n\telse\n\t\troot[\"DragJs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require(\"./src/dragjs\");\n","/**\n * @param  {any}  reader\n * @return {Promise<File[]>}\n */\nfunction travelDirEntry(reader)\n{\n    return new Promise((resolve, reject) => {\n        reader.readEntries((entries) => {\n            if (entries.length) {\n                travelDirEntry(reader).then((sub) => {\n                    resolve(entries.concat(sub));\n                }, reject);\n            } else {\n                resolve([]);\n            }\n        }, reject);\n    });\n}\n\n/**\n * \n * @param  {any}  fileEntry\n * @param  {string}  path\n * @return {Promise<File[]>}\n */\nfunction fileEntry(fileEntry, path)\n{\n    return readFileEntry(fileEntry).then((file) => {\n        file.xRelativePath = path + file.name;\n        return [file];\n    });\n}\n\n/**\n * @param {any}  dirEntry\n * @param {string}  path\n */\nfunction dirEntry(dirEntry, path)\n{\n    return readDirEntry(dirEntry).then((entries) => {\n        return travelEntries(entries, path + dirEntry.name + \"/\")\n    });\n}\n\n/**\n * @param  {any[]} entries \n * @param  {string}  path\n * @return {Promise<File[]>}\n */\nfunction travelEntries(entries, path = \"\")\n{\n    return Promise.all(entries.map((entry) => {\n        return (entry.isFile) ? fileEntry(entry, path) : dirEntry(entry, path);\n    })).then((array) => {\n        return Array.prototype.concat.apply([], array);\n    });\n}\n\n/**\n * @param  {any}  fileEntry\n * @return {Promise<File>}\n */\nfunction readFileEntry(fileEntry)\n{\n    return new Promise((resolve, reject) => fileEntry.file(resolve, reject));\n}\n\n/**\n * @param  {any}  dirEntry\n * @return {Promise<File[]>}\n */\nfunction readDirEntry(dirEntry)\n{\n    return travelDirEntry(dirEntry.createReader());\n}\n\n/**\n * @param  {DataTransferItemList}  items\n * @return {any[]}\n */\nfunction getAsEntry(items)\n{\n    var entries = [];\n\n    for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        var entry = item.webkitGetAsEntry();\n\n        if (entry) {\n            entries.push(entry);\n        }\n    }\n\n    return entries;\n}\n\n/**\n * \n * @param  {DataTransferItemList}  items\n * @return {Promise<File[]}\n */\nexport function travelTransferItemList(items)\n{\n    return travelEntries(getAsEntry(items));\n}\n","import { travelTransferItemList } from \"./entry_traveler\";\n\nclass DragJsDataTransfer\n{\n    /**\n     * @param {DataTransfer | null} originalDataTransfer\n     */\n    constructor(originalDataTransfer)\n    {\n        this.originalDataTransfer = originalDataTransfer;\n    }\n\n    /**\n     * @return {Promise<File[] | FileList>}\n     */\n    getFiles()\n    {\n        if (! this.originalDataTransfer) {\n            return Promise.resolve([]);\n        }\n\n        let dataTransfer = this.originalDataTransfer;\n\n        if (dataTransfer.items) {\n            let items = dataTransfer.items;\n\n            return travelTransferItemList(items);\n        } else {\n            return Promise.resolve(dataTransfer.files);\n        }\n    }\n\n    /**\n     * @param  {Event}  event\n     * @return {DataTransfer|null}\n     */\n    static event2NativeDataTransfer(event)\n    {\n        if (! (event instanceof DragEvent)) {\n            return null;\n        }\n\n        return event.dataTransfer || null;\n    }\n\n    /**\n     * @param  {DataTransfer}  dataTransfer\n     * @return {boolean}\n     */\n    static getContainFiles(dataTransfer)\n    {\n        let dataTransferTypes = dataTransfer.types;\n\n        if (! dataTransferTypes) {\n            // Unsupported Browser, we presume it was a file.\n            return true;\n        }\n\n        if (dataTransferTypes instanceof DOMStringList) {\n            return dataTransferTypes.contains('Files');\n        } else {\n            return dataTransferTypes.indexOf('Files') > -1;\n        }\n    }\n}\n\nexport default DragJsDataTransfer;","import { DropZoneArguments } from \"..\";\nimport DragJsDataTransfer from \"./dragjs_datatransfer\";\nimport { isSupported } from \"./dragjs\";\n\nclass DropZoneEvent\n{\n    /**\n     * @param {DropZoneArguments} args \n     */\n    constructor(args)\n    {\n        this.args = args;\n        this.dragEnterCounter = 0;\n    }\n\n    registerEventListeners()\n    {\n        if (isSupported()) {\n            this.args.element.addEventListener('dragover', this._dragOver.bind(this), false);\n            this.args.element.addEventListener('dragenter', this._dragEnter.bind(this), false);\n            this.args.element.addEventListener('dragleave', this._dragLeave.bind(this), false);\n            this.args.element.addEventListener('drop', this._drop.bind(this), false);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {Event} e\n     */\n    _dragOver(e)\n    {\n        let dataTransfer = this._toFileDataTransfer(e)\n        if (dataTransfer) {\n            dataTransfer.dropEffect = \"copy\"\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {Event} e\n     */\n    _dragEnter(e)\n    {\n        let dataTransfer = this._toFileDataTransfer(e)\n\n        if (dataTransfer && this.dragEnterCounter++ == 0) {\n            this.args.element.dispatchEvent(new CustomEvent(EVENT_DRAGENTER));\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {Event} e\n     */\n    _dragLeave(e)\n    {\n        let dataTransfer = this._toFileDataTransfer(e)\n\n        if (dataTransfer && --this.dragEnterCounter == 0) {\n            this._raiseEventDragLeave()\n        }\n    }\n\n    /**\n     * @private\n     */\n    _raiseEventDragLeave()\n    {\n        this.args.element.dispatchEvent(new CustomEvent(EVENT_DRAGLEAVE));\n    }\n\n    /**\n     * @private\n     * \n     * @param {Event} e\n     */\n    _drop(e)\n    {\n        let originalDataTransfer = this._toFileDataTransfer(e)\n\n        if (originalDataTransfer) {\n            this.dragEnterCounter = 0;\n            this._raiseEventDragLeave();\n\n            let dataTransfer = new DragJsDataTransfer(originalDataTransfer)\n\n            dataTransfer.getFiles().then((files) => {\n                if (files.length) {\n                    this.args.element.dispatchEvent(new CustomEvent(EVENT_DROP, {\n                        detail: {files}\n                    }))\n                }\n            }, (reason) => {\n                var notPrevented = this.args.element.dispatchEvent(new CustomEvent(EVENT_ERR, {\n                    cancelable: true, \n                    detail: {reason}\n                }));\n                if (notPrevented) {\n                    console.error(reason);\n                }\n            })\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param  {Event}  e\n     * @return {DataTransfer | null}\n     */\n    _toFileDataTransfer(e)\n    {\n        let dataTransfer = DragJsDataTransfer.event2NativeDataTransfer(e);\n\n        let containFiles = dataTransfer ? DragJsDataTransfer.getContainFiles(dataTransfer) : false;\n\n        if (containFiles) {\n            e.preventDefault();\n\n            return dataTransfer;\n        }\n    }\n}\n\nexport default DropZoneEvent;\nexport const EVENT_DRAGENTER = 'dropzone-dragenter';\nexport const EVENT_DRAGLEAVE = 'dropzone-dragleave';\nexport const EVENT_DROP = 'dropzone-drop';\nexport const EVENT_ERR = 'dropzone-error';\n","import { DropZoneArguments } from \"..\";\nimport { EVENT_DRAGENTER, EVENT_DRAGLEAVE } from \"./dropzone_event\";\n\nclass DropZoneDom\n{\n    /**\n     * @param {DropZoneArguments} args \n     */\n    constructor(args)\n    {\n        this.args = args\n    }\n\n    registerEventListeners()\n    {\n        this.args.element.addEventListener(EVENT_DRAGENTER, () => {\n            this.addClassName(this.getDragOverClass());\n        }, false);\n\n        this.args.element.addEventListener(EVENT_DRAGLEAVE, () => {\n            this.removeClassName(this.getDragOverClass());\n        }, false);\n    }\n\n    /**\n     * @returns {string}\n     */\n    getDragOverClass()\n    {\n        return this.args.options.cssClass && this.args.options.cssClass.dragover || 'is-dragover';\n    }\n\n    /**\n     * @param  {string}  className\n     * @return {this}\n     */\n    addClassName(className)\n    {\n        var classNames = this.getClassNames();\n        if (classNames.indexOf(className) == -1) {\n            classNames.push(className);\n            this.setClassNames(classNames);\n        }\n        return this\n    }\n\n    /**\n     * @param  {string}  className\n     * @return {this}\n     */\n    removeClassName(className)\n    {\n        var classNames = this.getClassNames();\n        /**\n         * @type {number}\n         */\n        var index;\n        if ((index = classNames.indexOf(className)) > -1) {\n            classNames.splice(index, 1);\n            this.setClassNames(classNames);\n        }\n        return this\n    }\n\n    /**\n     * @return {string[]}\n     */\n    getClassNames()\n    {\n        return this.args.element.className && this.args.element.className.split(' ') || [];\n    }\n\n    /**\n     * \n     * @param  {string[]}  classNames\n     * @return {this}\n     */\n    setClassNames(classNames)\n    {\n        this.args.element.className = classNames.join(' ');\n        return this\n    }\n}\n\nexport default DropZoneDom\n","import { DropZoneOptions, DropZoneDropCallback, DropZoneFallback } from \"..\";\nimport DropZoneEvent, { EVENT_DROP, EVENT_ERR } from \"./dropzone_event\";\nimport DropZoneDom from \"./dropzone_dom\";\n\nclass DropZone\n{\n    /**\n     * @param {HTMLElement} element\n     * @param {DropZoneOptions} options\n     */\n    constructor(element, options = {})\n    {\n        this.element = element;\n        this.options = options;\n\n        this.events = new DropZoneEvent({ element, options });\n        this.dom = new DropZoneDom({ element, options });\n\n        this._init();\n    }\n\n    /**\n     * @private\n     */\n    _init()\n    {\n        this.events.registerEventListeners();\n        this.dom.registerEventListeners();\n    }\n\n    /**\n     * \n     * @param  {DropZoneDropCallback}  callback\n     * @param  {DropZoneFallback=}  fallback\n     * @return {this}\n     */\n    listenOnDrop(callback, fallback)\n    {\n        this.element.addEventListener(EVENT_DROP, function (e) {\n            callback(e.detail.files);\n        }, false);\n\n        if (fallback) {\n            this.element.addEventListener(EVENT_ERR, function (e) {\n                e.preventDefault();\n                fallback(e.detail.reason);\n            })\n        }\n\n        return this\n    }\n\n    /**\n     * @return {Promise<File[] | FileList>}\n     */\n    getDropFiles()\n    {\n        return new Promise((resolve, reject) => {\n            this.element.addEventListener(EVENT_DROP, function (e) {\n                resolve(e.detail.files);\n            }, false);\n        })\n    }\n}\n\nexport default DropZone\n","/**\n * @param  {File | File[] | FileList}  files \n * @param  {string}  fieldName \n * @return {FormData}\n */\nexport function toFormData(files, fieldName = \"files[]\") {\n    var formData = new FormData();\n\n    if (files instanceof File) {\n        formData.append(fieldName, files, relativePath(files));\n    } else {\n        for (var i = 0; i < files.length; i++) {\n            var file = files[i];\n            formData.append(fieldName, file, relativePath(file));\n        }\n    }\n\n    return formData;\n}\n\n/**\n * @param  {any}  file\n * @return {string} \n */\nexport function relativePath(file) {\n    return file.xRelativePath || file.webkitRelativePath || file.name;\n}","import DropZone from \"./dropzone\";\nimport { toFormData, relativePath } from \"./utils\";\n\n/**\n * @return {boolean}\n */\nexport function isSupported() {\n    return typeof FileList !== 'undefined'\n}\nexport { DropZone }\nexport const utils = { toFormData, relativePath }\n"],"sourceRoot":""}